name: Notion Synchronization

on:
  issues:
    types:
      - opened
      - reopened
      - edited
      - closed
      - assigned
      - unassigned
      - labeled
      - unlabeled

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-existence:
    name: Check existence
    runs-on: ubuntu-latest
    outputs:
      page_id: ${{ steps.notion.outputs.page_id }}
      status: ${{ steps.notion.outputs.status }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check notion database
        id: notion
        run: |
          results=$(curl -X POST "https://api.notion.com/v1/databases/${{ secrets.NOTION_DATABASE_ID }}/query" \
            -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
            -H "Content-Type: application/json" \
            -H "Notion-Version: 2022-06-28" \
            --data '{
              "filter": {
                "property": "Link",
                "url": {
                  "equals": "${{ github.event.issue.html_url }}"
                }
              },
              "page_size": 1
            }' | jq -r '.results');

            page_id=""
            status=""

            if [ "$results" != "[]" ]; then
              page_id=$(echo "$results" | jq -r '.[0].id')
              status=$(echo "$results" | jq -r '.[0].properties.Status.select.name')
            fi

            echo "page_id=$page_id" >> $GITHUB_OUTPUT
            echo "status=$status" >> $GITHUB_OUTPUT

  synchronize-with-notion:
    needs: check-existence
    name: Synchronize with Notion
    runs-on: ubuntu-latest
    steps:
      - name: Setup page properties
        id: properties
        run: |
          status="${{ needs.check-existence.outputs.status }}"
          assignees='${{ toJSON(github.event.issue.assignees.*.login ) }}'
          labels='${{ toJSON(github.event.issue.labels.*.name) }}'

          echo "[]" > assignees.json
          echo "[]" > labels.json
          echo '{ "start": "${{ github.event.issue.created_at }}", "end": null, "time_zone": "${{ vars.TIMEZONE }}" }' > date.json

          for data in $(echo "$assignees" | jq -c '.[]'); do
            result=$(jq '. + [{ name: '$data' }]' assignees.json)
            echo "$result" > assignees.json
          done
          for data in $(echo "$labels" | jq -Rr 'gsub(" "; "")' | jq -c '.[]'); do
            result=$(jq '. + [{ name: '$data' }]' labels.json)
            echo "$result" > labels.json
          done

          if [ "${{ github.event.issue.closed_at }}" != "" ]; then
            status="Closed"
            date=$(jq '.end="${{ github.event.issue.closed_at }}"' date.json)
            echo "$date" > date.json
          else
            status="Opened"
          fi

          assignees=$(echo "$(cat assignees.json)" | jq -c .)
          labels=$(echo "$(cat labels.json)" | jq -c .)
          date=$(echo "$(cat date.json)" | jq -c .)

          echo "status=$status" >> $GITHUB_OUTPUT
          echo "assignees=$assignees" >> $GITHUB_OUTPUT
          echo "labels=$labels" >> $GITHUB_OUTPUT
          echo "date=$date" >> $GITHUB_OUTPUT

      - name: Setup parameters
        id: params
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
        run: |
          echo "{}" > body.json
          method="PATCH"
          request_url="https://api.notion.com/v1/pages"

          if [ "${{ needs.check-existence.outputs.page_id }}" != "" ]; then
            request_url+="/${{ needs.check-existence.outputs.page_id }}"
          fi

          if [ "${{ needs.check-existence.outputs.page_id }}" == "" -a "${{ steps.properties.outputs.status }}" == "Opened" ]; then
            method="POST"
            body=$(jq '. + { parent: { database_id: "${{ secrets.NOTION_DATABASE_ID }}" } }' body.json)
            echo "$body" > body.json
          fi

          body=$(jq '. + { 
            properties: {
              Status: { 
                select: { 
                  name: "${{ steps.properties.outputs.status }}"
                } 
              },
              Title: {
                title: [{
                  text: {
                    content: "$ISSUE_TITLE"    
                  }
                }]
              },
              Assignees: {
                multi_select: ${{ steps.properties.outputs.assignees }}  
              },
              Labels: {
                multi_select: ${{ steps.properties.outputs.labels }}  
              },
              Date: {
                date: ${{ steps.properties.outputs.date }}  
              },
              Link: {
                url: "$ISSUE_URL"  
              }  
            }
          }' body.json)

          echo "$body" > body.json

          echo "method=$method" >> $GITHUB_OUTPUT
          echo "request_url=$request_url" >> $GITHUB_OUTPUT
          echo "body=$(echo "$(cat body.json)" | jq -c .)" >> $GITHUB_OUTPUT

      - name: Synchronize page properties with Notion
        if: ${{ !(needs.check-existence.outputs.page_id == '' && steps.params.outputs.method == 'PATCH') }}
        run: |
          curl -X ${{ steps.params.outputs.method }} "${{ steps.params.outputs.request_url }}" \
            -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
            -H "Content-Type: application/json" \
            -H "Notion-Version: 2022-06-28" \
            --data '${{ steps.params.outputs.body }}'
