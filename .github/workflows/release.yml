name: Release

on:
  push:
    branches:
      - main

jobs:
  deploy-storybook:
    name: Deploy Storybook
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-storybook

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run build
        run: npm run build

      - name: Run chromatic
        id: chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

      - name: Check a latest pull request
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            return (await github.rest.repos.listPullRequestsAssociatedWithCommit({
              commit_sha: context.sha,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })).data[0].number;

      - name: Comment on pull request
        run: gh pr comment "$NUMBER" --body "$BODY"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ steps.pr.outputs.result }}
          BODY: ':rocket: storybook: ${{ steps.chromatic.outputs.storybookUrl }}'

  run-changesets:
    name: Run changesets
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      published_packages: ${{ steps.form.outputs.published_packages }}
      pr: ${{ steps.pr.outputs.result }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Create release pull request
        uses: changesets/action@v1
        with:
          version: npm run version
          title: 'Chore: Version changeset'
          commit: 'Chore: Version changeset'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Create .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Check a latest pull request
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const result = (await github.rest.repos.listPullRequestsAssociatedWithCommit({
              commit_sha: context.sha,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })).data[0];

            return {
              head_ref: result.head.ref,
              commit: result.merge_commit_sha.substring(0, 7),
              number: result.number,
              title: result.title,
              url: result.html_url,
              avatar_url: context.payload.repository.owner.avatar_url
            };

      - name: Publish on npm
        id: changesets
        if: startsWith(fromJSON(steps.pr.outputs.result).head_ref, 'changeset-release')
        uses: changesets/action@v1
        with:
          publish: npm run publish-packages
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Form published packages into string
        id: form
        run: |
          array='${{ steps.changesets.outputs.publishedPackages }}'
          result=""

          if [ "$array" != "[]" ]; then
            for data in $(echo "$array" | jq -c '.[]'); do
              name=$(echo "$data" | jq -r '.name')
              version=$(echo "$data" | jq -r '.version')
              result+="*\`$name\`* : <https://npmjs.com/package/$name/v/$version|*$version*>\n"
            done
          fi

          result=${result%\\n}
          echo "published_packages=$result" >> $GITHUB_OUTPUT

  send_slack_message:
    needs: run-changesets
    name: Send slack message
    if: needs.run-changesets.outputs.published == 'true' || needs.run-changesets.outputs.published_packages != '' || failure()
    runs-on: ubuntu-latest
    env:
      REPO: ${{ github.repository }}
      REPO_OWNER: ${{ github.repository_owner }}
      RUN_ID: ${{ github.run_id }}
      PUBLISHED: ${{ needs.run-changesets.outputs.published }}
      PUBLISHED_PACKAGES: ${{ needs.run-changesets.outputs.published_packages }}
      PR_HEAD_REF: ${{ fromJSON(needs.run-changesets.outputs.pr).head_ref }}
      PR_COMMIT: ${{ fromJSON(needs.run-changesets.outputs.pr).commit }}
      PR_NUMBER: ${{ fromJSON(needs.run-changesets.outputs.pr).number }}
      PR_TITLE: ${{ fromJSON(needs.run-changesets.outputs.pr).title }}
      PR_URL: ${{ fromJSON(needs.run-changesets.outputs.pr).url }}
      AVATAR_URL: ${{ fromJSON(needs.run-changesets.outputs.pr).avatar_url }}
    steps:
      - name: Send message on success
        if: env.PUBLISHED == 'true' && env.PUBLISHED_PACKAGES && success()
        uses: slackapi/slack-github-action@v2
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            attachments:
              - color: "#36a64f"
                blocks:
                  - type: "header"
                    text:
                      type: "plain_text"
                      text: "‚úÖ Ìå®ÌÇ§ÏßÄ Î∞∞Ìè¨ ÏôÑÎ£å"
                      emoji: true
                  - type: "section"
                    text:
                      type: "mrkdwn"
                      text: "'$PUBLISHED_PACKAGES'"
                  - type: "divider"
                  - type: "section"
                    text:
                      type: "mrkdwn"
                      text: "*Commit*\n<https://github.com/'$REPO'/commit/'$PR_COMMIT'|'$PR_COMMIT'>"
                  - type: "section"
                    text:
                      type: "mrkdwn"
                      text: "*Pull request*\n<https://github.com/'$REPO'/pull/'$PR_NUMBER'|[#'$PR_NUMBER'] '$PR_TITLE'>"
                  - type: "actions"
                    elements:
                      - type: "button"
                        text:
                          type: "plain_text"
                          text: "‚≠ê\t Workflow details"
                          emoji: true
                        url: "https://github.com/'$REPO'/actions/runs/'$RUN_ID'"
                      - type: "button"
                        text:
                          type: "plain_text"
                          text: "üìÑ\t Release note"
                          emoji: true
                        url: "https://github.com/'$REPO'/pull/'$PR_NUMBER'"
                  - type: "divider"
                  - type: "context"
                    elements:
                      - type: "image"
                        image_url: "'$AVATAR_URL'"
                        alt_text: "avatar_img"
                      - type: "mrkdwn"
                        text: "<https://github.com/'$REPO_OWNER'|*'$REPO_OWNER'*> has approved this message."

      - name: Send message on failure
        if: env.PUBLISHED == 'false' && !env.PUBLISHED_PACKAGES && failure()
        uses: slackapi/slack-github-action@v2
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            attachments:
              - color: "#ff0000"
                blocks:
                  - type: "header"
                    text:
                      type: "plain_text"
                      text: "‚ùå Ìå®ÌÇ§ÏßÄ Î∞∞Ìè¨ Ïã§Ìå®"
                      emoji: true
                  - type: "divider"
                  - type: "section"
                    text:
                      type: "mrkdwn"
                      text: "*Commit*\n<https://github.com/'$REPO'/commit/'$PR_COMMIT'|'$PR_COMMIT'>"
                  - type: "section"
                    text:
                      type: "mrkdwn"
                      text: "*Pull request*\n<https://github.com/'$REPO'/pull/'$PR_NUMBER'|['#$PR_NUMBER'] '$PR_TITLE'>"
                  - type: "actions"
                    elements:
                      - type: "button"
                        text:
                          type: "plain_text"
                          text: "üîç\t Workflow details"
                          emoji: true
                        url: "https://github.com/'$REPO'/actions/runs/'$RUN_ID'"
                  - type: "divider"
                  - type: "context"
                    elements:
                      - type: "image"
                        image_url: "'$AVATAR_URL'"
                        alt_text: "avatar_img"
                      - type: "mrkdwn"
                        text: "<https://github.com/'$REPO_OWNER'|*'$REPO_OWNER'*> has approved this message."
